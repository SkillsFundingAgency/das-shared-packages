parameters:
  WorkingDirectory:
  DotNetStandardPackagesToPack: ''
  DotNetFrameworkPackagesToPack: ''
  SdkStyleFrameworkProjects: false
  SonarCloudProjectKey:

jobs:
- job: CodeBuild
  pool:
    name: DAS - Continuous Integration
  variables:
  - group: BUILD Management Resources
  - name: buildConfiguration
    value: Release
  - name: buildPlatform
    value: Any CPU
  steps:
    - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks
      parameters:
        ConfigFilePath: ${{ parameters.WorkingDirectory }}/GitVersion.yml
    - ${{ if ne(parameters.DotNetFrameworkPackagesToPack, '') }}:
      - task: SonarCloudPrepare@1
        displayName: Prepare SonarCloud analysis configuration
        condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
        inputs:
          SonarCloud: ESFA - SonarCloud
          organization: $(SonarCloudOrganisationKey)
          scannerMode: MSBuild
          projectName: "$(Build.DefinitionName)"
          projectKey: ${{ parameters.SonarCloudProjectKey }}
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet 5.x'
        inputs:
          versionSpec: 5.x
      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: ${{ parameters.WorkingDirectory }}/**/*.sln
      - task: VSBuild@1
        displayName: 'Build Solution'
        inputs:
          solution: ${{ parameters.WorkingDirectory }}/**/*.sln
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          clean: true
          vsVersion: '16.0'
      - task: VSTest@2
        displayName: 'Run NUnit Tests'
        inputs:
          testAssemblyVer2: ${{parameters.WorkingDirectory }}/**/bin/$(buildConfiguration)/*UnitTests.dll
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
      - task: SonarCloudAnalyze@1
        displayName: Run SonarCloud analysis
        condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))

      - task: SonarCloudPublish@1
        displayName: Publish SonarCloud analysis results on build summary
        condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
        inputs:
          pollingTimeoutSec: '300'
    - ${{ elseif ne(parameters.DotNetStandardPackagesToPack, '') }}:
      - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
        parameters:
          SonarCloudProjectKey: ${{ parameters.SonarCloudProjectKey }}
          TargetProjects: ${{ parameters.WorkingDirectory }}/**/*.csproj
          UnitTestProjects: ${{parameters.WorkingDirectory }}/**/*UnitTests.csproj
    - template: azure-pipelines-templates/build/step/nuget-pack.yml@das-platform-building-blocks
      parameters:
        ${{ if eq(parameters.SdkStyleFrameworkProjects, true) }}:
          DotNetStandardPackagesToPack: ${{ parameters.DotNetFrameworkPackagesToPack }}
        ${{ elseif ne(parameters.DotNetStandardPackagesToPack, '') }}:
          DotNetStandardPackagesToPack: ${{ parameters.DotNetStandardPackagesToPack }}
        ${{ elseif ne(parameters.DotNetFrameworkPackagesToPack, '') }}:
          DotNetFrameworkPackagesToPack: ${{ parameters.DotNetFrameworkPackagesToPack }}